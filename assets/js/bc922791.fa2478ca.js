"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[9343],{1723:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=n(5893),i=n(3905);const s={},o="Lspci",c={id:"monitors/0400-lspci",title:"Lspci",description:"The PCI Utilities package contains a library for portable access to PCI bus",source:"@site/docs/monitors/0400-lspci.md",sourceDirName:"monitors",slug:"/monitors/0400-lspci",permalink:"/VirtualClient/docs/monitors/0400-lspci",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/monitors/0400-lspci.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Nvidia SMI",permalink:"/VirtualClient/docs/monitors/0300-nvidia-smi"},next:{title:"Dependencies",permalink:"/VirtualClient/docs/category/dependencies"}},a={},l=[{value:"Dependency",id:"dependency",level:2},{value:"Supported Platforms",id:"supported-platforms",level:2},{value:"lspci Output Description",id:"lspci-output-description",level:2},{value:"Example",id:"example",level:3}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"lspci",children:"Lspci"}),"\n",(0,r.jsx)(t.p,{children:"The PCI Utilities package contains a library for portable access to PCI bus\nconfiguration registers and several utilities based on this library."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"lspci: displays detailed information about all PCI buses and devices."}),"\n"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://github.com/pciutils/pciutils",children:"lspci repo"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://eternallybored.org/misc/pciutils/",children:"Windows Build Download"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"dependency",children:"Dependency"}),"\n",(0,r.jsx)(t.p,{children:"Most Linux distro comes with lspci pre-installed. On Windows, VC is packaging a win-x64 build inside VC package itself."}),"\n",(0,r.jsx)(t.h2,{id:"supported-platforms",children:"Supported Platforms"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"linux-x64"}),"\n",(0,r.jsx)(t.li,{children:"linux-arm64"}),"\n",(0,r.jsx)(t.li,{children:"win-x64"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"lspci-output-description",children:"lspci Output Description"}),"\n",(0,r.jsx)(t.p,{children:"The following section describes the various counters/metrics that are available with the lspci toolset."}),"\n",(0,r.jsxs)(t.p,{children:["The command we are using is ",(0,r.jsx)(t.code,{children:"lspci -vvv"}),". The data structure of the lspci output is not a straightforward dicctionary.\nThe data structure is parsed according to the contract at ",(0,r.jsx)(t.a,{target:"_blank",href:n(4727).Z+"",children:"PciDevice.cs"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"For each PCI device, we are parsing the name, address, various properties and capabilities."}),"\n",(0,r.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.p,{children:"This is an example of the minimum profile to run LspciMonitor. The PCI devices is not expected to change often, so the monitor frequency could be set very low."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n    "Description": "Default Monitors",\n    "Parameters": {\n      "MonitorFrequency": "12:00:00",\n      "MonitorWarmupPeriod": "00:01:00"\n    },\n    "Monitors": [\n      {\n        "Type": "LspciMonitor",\n        "Parameters": {\n          "Scenario": "CapturePCIDevicesDetails",\n          "MonitorFrequency": "$.Parameters.MonitorFrequency",\n          "MonitorWarmupPeriod": "$.Parameters.MonitorWarmupPeriod"\n        }\n      }\n    ]\n  }\n'})})]})}function d(e={}){const{wrapper:t}={...(0,i.ah)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},3905:(e,t,n)=>{n.d(t,{ah:()=>l});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),l=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,a=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),h=i,m=u["".concat(a,".").concat(h)]||u[h]||p[h]||s;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));d.displayName="MDXCreateElement"},4727:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/PciDevice-28b998461800228f096c80fc2fb2d794.cs"}}]);